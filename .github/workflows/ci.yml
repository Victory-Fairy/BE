name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_PREFIX: victoryfairy/
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [api, file]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build JAR
        run: |
          cd interface/${{ matrix.module }}
          ./gradlew bootJar
          mkdir -p ../../.deploy/jar
          cp build/libs/*.jar ../../.deploy/jar/victoryfairy-${{ matrix.module }}.jar

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login $DOCKER_REGISTRY -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=${{ env.IMAGE_PREFIX }}-${{ matrix.module }}
          DOCKERFILE=Dockerfile-common
          if [ "${{ matrix.module }}" = "crawling" ]; then
            DOCKERFILE=Dockerfile-crawling
          fi
          docker build -f .deploy/${DOCKERFILE} \
            --build-arg SERVICE=${{ matrix.module }} \
            -t $DOCKER_REGISTRY/$IMAGE_NAME:${{ github.sha }} \
            -t $DOCKER_REGISTRY/$IMAGE_NAME:latest .
          docker push $DOCKER_REGISTRY/$IMAGE_NAME:${{ github.sha }}
          docker push $DOCKER_REGISTRY/$IMAGE_NAME:latest

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.PRIVATE_KEY }}
          script: |
            IMAGE_NAME=${{ env.IMAGE_PREFIX }}-${{ matrix.module }}
            STACK=nextplayer
            docker pull $DOCKER_REGISTRY/$IMAGE_NAME:${{ github.sha }}
            docker service update --image $DOCKER_REGISTRY/$IMAGE_NAME:${{ github.sha }} ${STACK}_${{ matrix.module }} --force --update-delay 10s